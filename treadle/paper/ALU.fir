circuit ALU :
  module ALU :
    input clock : Clock
    input reset : UInt<1>
    output io : {flip src_a : UInt<32>, flip src_b : UInt<32>, flip ALUOp : UInt<5>, sum : UInt<32>, conflag : UInt<1>}
  
    node _T_1 = eq(UInt<5>("h0"), io.ALUOp)
    node _T_2 = add(io.src_a, io.src_b)
    node _T_4 = eq(UInt<5>("h1"), io.ALUOp)
    node _T_5 = sub(io.src_a, io.src_b)
    node _T_7 = eq(UInt<5>("h2"), io.ALUOp)
    node _T_8 = and(io.src_a, io.src_b)
    node _T_10 = eq(UInt<5>("h3"), io.ALUOp)
    node _T_11 = or(io.src_a, io.src_b)
    node _T_13 = eq(UInt<5>("h4"), io.ALUOp)
    node shamt = bits(io.src_b, 5, 0)
    node _T_14 = xor(io.src_a, shamt)
    node _T_16 = eq(UInt<5>("h5"), io.ALUOp)
    node _T_17 = dshl(io.src_a, shamt)
    node _T_19 = eq(UInt<5>("h6"), io.ALUOp)
    node _T_20 = dshr(io.src_a, shamt)
    node _T_22 = eq(UInt<5>("h7"), io.ALUOp)
    node _T_23 = asSInt(io.src_a)
    node _T_24 = dshr(_T_23, shamt)
    node _T_25 = asUInt(_T_24)
    node _T_27 = eq(UInt<5>("h8"), io.ALUOp)
    node _T_28 = asSInt(io.src_a)
    node _T_29 = asSInt(io.src_b)
    node _T_30 = lt(_T_28, _T_29)
    node _T_32 = eq(UInt<5>("h9"), io.ALUOp)
    node _T_33 = lt(io.src_a, io.src_b)
    node _T_31 = mux(_T_32, _T_33, io.src_b)
    node _T_26 = mux(_T_27, _T_30, _T_31)
    node _T_21 = mux(_T_22, _T_25, _T_26)
    node _T_18 = mux(_T_19, _T_20, _T_21)
    node _T_15 = mux(_T_16, _T_17, _T_18)
    node _T_12 = mux(_T_13, _T_14, _T_15)
    node _T_9 = mux(_T_10, _T_11, _T_12)
    node _T_6 = mux(_T_7, _T_8, _T_9)
    node _T_3 = mux(_T_4, _T_5, _T_6)
    node _T = mux(_T_1, _T_2, _T_3)
    io.sum <= _T
    node _T_35 = eq(UInt<5>("ha"), io.ALUOp)
    node _T_36 = asSInt(io.src_a)
    node _T_37 = asSInt(io.src_b)
    node _T_38 = eq(_T_36, _T_37)
    node _T_40 = eq(UInt<5>("hb"), io.ALUOp)
    node _T_41 = asSInt(io.src_a)
    node _T_42 = asSInt(io.src_b)
    node _T_43 = neq(_T_41, _T_42)
    node _T_45 = eq(UInt<5>("hc"), io.ALUOp)
    node _T_46 = asSInt(io.src_a)
    node _T_47 = asSInt(io.src_b)
    node _T_48 = lt(_T_46, _T_47)
    node _T_50 = eq(UInt<5>("hd"), io.ALUOp)
    node _T_51 = asSInt(io.src_a)
    node _T_52 = asSInt(io.src_b)
    node _T_53 = geq(_T_51, _T_52)
    node _T_55 = eq(UInt<5>("he"), io.ALUOp)
    node _T_56 = lt(io.src_a, io.src_b)
    node _T_58 = eq(UInt<5>("hf"), io.ALUOp)
    node _T_59 = geq(io.src_a, io.src_b)
    node _T_57 = mux(_T_58, _T_59, UInt<1>("h0"))
    node _T_54 = mux(_T_55, _T_56, _T_57)
    node _T_49 = mux(_T_50, _T_53, _T_54)
    node _T_44 = mux(_T_45, _T_48, _T_49)
    node _T_39 = mux(_T_40, _T_43, _T_44)
    node _T_34 = mux(_T_35, _T_38, _T_39)
    node _T_60 = asUInt(_T_34)
    io.conflag <= _T_60
